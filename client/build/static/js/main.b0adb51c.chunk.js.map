{"version":3,"sources":["components/AppRoute.js","components/PrivateRoute.js","components/NavBar.js","components/layout/LayoutDefault.js","components/NavBarUnAuth.js","components/layout/LayoutUnAuth.js","views/Splash.js","config.js","helpers/AuthHeader.js","services/userService.js","helpers/index.js","redux/constants.js","redux/actions/user.js","views/Login.js","views/Signup.js","views/boards/CreateBoard.js","views/Dashboard.js","views/Account.js","App.js","redux/reducers/authentication.reducer.js","redux/reducers/index.js","app/store.js","serviceWorker.js","index.js"],"names":["AppRoute","Component","component","Layout","layout","rest","undefined","props","Fragment","children","render","config","PrivateRoute","session","jwt","Cookies","get","base64","split","replace","JSON","parse","window","atob","error","console","getSession","userSession","to","pathname","state","from","location","NavBar","React","useState","isActive","setisActive","className","role","aria-label","style","borderBottom","onClick","aria-expanded","data-target","aria-hidden","LayoutDefault","NavBarUnAuth","log","LayoutUnAuth","Splash","goDisabled","onInputChange","bind","e","this","setState","groupName","target","value","length","marginTop","maxWidth","margin","textAlign","type","onChange","placeholder","disabled","authHeader","token","logout","localStorage","clear","remove","removeItem","handleResponse","response","text","then","data","ok","status","message","statusText","Promise","reject","userService","login","email","password","requestOptions","method","headers","body","stringify","fetch","res","setItem","user","set","register","getById","id","update","delete","history","createBrowserHistory","forceRefresh","userConstants","userActions","dispatch","success","push","failure","toString","request","Login","inputs","setInputs","setSubmitted","useSelector","authentication","loggingIn","useDispatch","useLocation","handleChange","name","icon","faEnvelope","faLock","preventDefault","Signup","setUser","faUser","emaiil","href","COLORS","STEPS","t","y","CreateBoardView","gameName","gameDesc","backgroundColor","hex","textColor","displayCount","index","label","step","setStep","disableNext","setDisableNext","game","setGame","userKey","err","setErr","useEffect","game_id","renderStep","goNext","i","submit","desc","axios","post","catch","colorItem","color","width","height","borderRadius","boxShadow","config_items","field","title","v","default","val","isError","borderRight","map","item","padding","triangle","colors","onChangeComplete","marginLeft","configItemFactory","renderConfig","faCheckCircle","size","class","Dashboard","games","setGames","loading","setLoading","showItem","setShowItem","getItem","items","renderItemDetails","accessKey","border","description","scores","moment","lastScoreAt","format","createdAt","AccountPage","account","coppied","setCoppied","renderTypeInfo","listStyle","marginBottom","cursor","ta","document","createElement","innerText","appendChild","select","execCommand","setTimeout","copyToClipboard","readOnly","marginRight","App","alert","exact","path","initialState","loggedIn","rootReducer","combineReducers","action","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0adb51c.chunk.js","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst AppRoute = ({\n  component: Component,\n  layout: Layout,\n  ...rest\n}) => {\n\n  Layout = (Layout === undefined) ? props => (<React.Fragment>{props.children}</React.Fragment>) : Layout;\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout config={props.config}>\n          <Component {...props} />\n        </Layout>\n      )} />\n  );\n}\n\nexport default AppRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie'\n\n// eslint-disable-next-line\nconst getUserFromToken = token => {\n  if (token) {\n    try {\n      return JSON.parse(atob(token.split('.')[1]));\n    } catch (error) {\n      // ignore\n    }\n  }\n  return null;\n};\n\nconst getSession = () => {\n  const jwt = Cookies.get('slb-token');\n  let session;\n  try {\n    if (jwt) {\n      const base64Url = jwt.split('.')[1]\n      const base64 = base64Url.replace('-', '+').replace('_', '/')\n      // what is window.atob ?\n      // https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/atob\n      session = JSON.parse(window.atob(base64));\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  return session;\n}\n\n// eslint-disable-next-line\nconst logOut = () => {\n  Cookies.remove('slb-user')\n}\n\n\nconst PrivateRoute = ({\n  component: Component,\n  layout: Layout,\n  ...rest\n}) => {\n\n  Layout = (Layout === undefined) ? props => (<React.Fragment>{props.children}</React.Fragment>) : Layout;\n  const session = getSession()\n\n  return (\n    <Route\n      {...rest}\n      render={props => !!session ? (\n        <Layout {...rest} userSession={session} >\n          <Component {...props}/>\n        </Layout>\n      ) : (\n        <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n        />\n      )} />\n  );\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NavBar() {\n\n    const [isActive, setisActive] = React.useState(false);\n\n    return (\n        <nav className=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\" style={{borderBottom: \"1px solid #eee\"}}>\n\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\">\n                    <p className=\"has-text-weight-semibold is-size-5\">SimplyLeaderBoards</p>\n                </a>\n                <a \n            onClick={() => {\n                setisActive(!isActive)\n              }}\n            role=\"button\" \n            className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n            </a>\n            </div>\n\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n                <div className=\"navbar-start\">\n                    <div className=\"navbar-item\">\n                        <Link to=\"/dashboard\">\n                            <button className=\"button is-ghost\">Dashboard</button>\n                        </Link>\n                        <Link to=\"/account\">\n                            <button className=\"button is-ghost\">Account</button>\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"navbar-end\">\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport NavBar from '../NavBar';\n// import Header from '../components/layout/Header';\n// import Footer from '../components/layout/Footer';\n\nconst LayoutDefault = ({ children }) => (\n  <React.Fragment>\n    <NavBar></NavBar>\n    <div className=\"site-content\">\n      {/* TODO: Eventually menu should be injected here */}\n      {children}\n    </div>\n  </React.Fragment>\n);\n\nexport default LayoutDefault;  ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NavBarUnAuth() {\n\n    const [isActive, setisActive] = React.useState(false);\n\n    console.log('RENDERING UN AUTH HEAEDER: ' + isActive);\n\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n\n            <a \n            onClick={() => {\n                setisActive(!isActive)\n              }}\n            role=\"button\" \n            className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n            </a>\n\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n                <div className=\"navbar-start\">\n                \n                </div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <Link to=\"/login\">\n                            <button className=\"button is-ghost\">Log In</button>\n                        </Link>\n                    </div>\n                    <div className=\"navbar-item\">\n                        <Link to=\"/register\">\n                            <button className=\"button is-primary is-rounded\">Sign Up</button>    \n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBarUnAuth;","import React from 'react';\nimport NavBarUnAuth from '../NavBarUnAuth';\n// import Header from '../components/layout/Header';\n// import Footer from '../components/layout/Footer';\n\nconst LayoutUnAuth = ({ children }) => (\n  <React.Fragment>\n    <NavBarUnAuth></NavBarUnAuth>\n    <main className=\"site-content\">\n      {children}\n    </main>\n  </React.Fragment>\n);\n\nexport default LayoutUnAuth;  ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nexport default class Splash extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            goDisabled: true\n        }\n        this.onInputChange = this.onInputChange.bind(this);\n    }\n\n    onInputChange(e) {\n        this.setState({groupName: e.target.value, goDisabled: (e.target.value.length < 3)})\n    }\n\n    render() {\n        const { goDisabled } = this.state;\n        return (\n            <div className=\"App has-text-centered\" style={{marginTop: '80px'}}>\n              <h1 className=\"title\">SimplyLeaderBoards</h1>\n              <p className=\"subtitle\">\n                Add a leaderboard to your game in minutes.\n              </p>\n\n              <div className=\"container is-max-desktop\">\n                <input \n                    className=\"input\" \n                    style={{maxWidth: 650, margin:12, textAlign:'center'}} \n                    type=\"text\" \n                    onChange={this.onInputChange}\n                    placeholder=\"Entere the name of your game\"/>\n                <br/>\n                <button className=\"button is-primary is-rounded\" disabled={goDisabled}>Create Your Game's Leaderboard</button>\n              </div>\n\n              <div style={{marginTop: '40px'}}>\n                <p>Already have an account? <Link to=\"/login\">Log In</Link></p>\n              </div>\n            </div>\n        );\n    }\n}\n","export const config = {\n    apiUrl: '/api',\n}","import Cookies from 'js-cookie';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    let token = Cookies.get('slb-token');\n    if (token) {\n        return { 'Authorization': 'Bearer ' + token, 'slb-token': token };\n    } else {\n        return {};\n    }\n}","import { config } from '../config';\nimport { authHeader } from '../helpers/AuthHeader';\nimport Cookies from 'js-cookie'\n\n\nfunction clearCookies() {\n    localStorage.clear();\n    Cookies.remove('slb-token');\n    console.log('cleared token: ' + Cookies.get('slb-token'));\n}\n\nfunction login(email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n    };\n\n    return fetch(`${config.apiUrl}/auth/login`, requestOptions)\n        .then(handleResponse)\n        .then(res => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('slb-user', JSON.stringify(res.user));\n            Cookies.set('slb-token', res.token);\n            return res.user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    clearCookies()    \n    localStorage.removeItem('slb-user');\n    Cookies.remove('slb-token');\n}\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/auth/register`, requestOptions)\n        .then(handleResponse)\n        .then(res => {\n            localStorage.setItem('slb-user', JSON.stringify(res.user));\n            Cookies.set('slb-token', res.token);\n            return res.user;\n        });\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(handleResponse);;\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                // location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}\n\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getById,\n    update,\n    delete: _delete\n};","import { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory({forceRefresh: true});","export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n    \n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'    \n};","\nimport { userService } from '../../services/userService';\nimport { history } from '../../helpers';\nimport { userConstants } from '../constants'\n\n\nfunction login(email, password, from) {\n    return dispatch => {\n        dispatch(request({ email }));\n\n        userService.login(email, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push(from);\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    console.log('logout action');\n    userService.logout();\n    history.push('/');\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/dashboard');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\n\n\n\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userActions } from '../redux/actions/user';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faLock} from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Login() {\n    const [inputs, setInputs] = useState({\n        email: '',\n        password: ''\n    });\n    const [submitted, setSubmitted] = useState(false);\n    const { email, password } = inputs;\n    const loggingIn = useSelector(state => state.authentication.loggingIn);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n     /*\n     useEffect(() => { \n        dispatch(userActions.logout()); \n    }, []); */\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setInputs(inputs => ({ ...inputs, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setSubmitted(true);\n        if (email && password) {\n            // get return url from location state or default to home page\n            const { from } = location.state || { from: { pathname: \"/dashboard\" } };\n            dispatch(userActions.login(email, password, from));\n        }\n        else {\n            console.log({email, password});\n        }\n    }\n\n    return (\n        <section style={{marginTop: '80px'}}>\n            <div className=\"column is-three-fifths is-offset-one-fifth\">\n                    <h1 className=\"title\">Login to SimplyBoards</h1>\n            </div>\n\n            <div className=\"column is-three-fifths is-offset-one-fifth\">\n                <div className=\"field\">\n                    <p className=\"control has-icons-left has-icons-right\">\n                        <input name=\"email\" className=\"input\" type=\"email\" placeholder=\"Email\" onChange={handleChange}/>\n                        <span className=\"icon is-small is-left\">\n                            <FontAwesomeIcon icon={faEnvelope} />\n                        </span>\n                        <span className=\"icon is-small is-right\">\n                            <i className=\"fas fa-check\"></i>\n                        </span>\n                    </p>\n                </div>\n                <div className=\"field\">\n                    <p className=\"control has-icons-left\">\n                        <input className=\"input\" name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                        <span className=\"icon is-small is-left\">\n                            <FontAwesomeIcon icon={faLock} />\n                        </span>\n                    </p>\n                </div>\n\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button className=\"button is-link\" onClick={handleSubmit}>LogIn</button>\n                    </div>\n                </div>\n\n                <p>Don't have an account? <Link to=\"/register\">Sign Up</Link></p>\n                \n            </div>\n        </section>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faLock, faUser} from '@fortawesome/free-solid-svg-icons'\n\nimport { userActions } from '../redux/actions/user';\n\n\n\nfunction Signup(){\n\n    const [isEmailValid, setEmailValid] = useState(true);\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: ''\n    });\n    const [submitted, setSubmitted] = useState(false);\n    // const registering = useSelector(state => state.registration.registering);\n    const dispatch = useDispatch();\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setUser(user => ({ ...user, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        setSubmitted(true);\n        if (user.name && user.email && user.password) {\n            dispatch(userActions.register(user));\n        }\n    }\n\n    return (\n        <div>\n            <section>\n\n                <div className=\"column is-three-fifths is-offset-one-fifth\">\n                    <h1 className=\"title\">Register to start using SimplyBoards</h1>\n                </div>\n\n                <div className=\"column is-three-fifths is-offset-one-fifth\">\n                    <div className=\"field\">\n                        <label className=\"label\">Name</label>\n                        <div className=\"control has-icons-left has-icons-right\">\n                            <input \n                                className=\"input\" \n                                name=\"name\"\n                                type=\"text\" \n                                value={user.name} onChange={handleChange}\n                                placeholder=\"What should we call you?\" \n                            />\n                            <span className=\"icon is-small is-left\">\n                                <FontAwesomeIcon icon={faUser} />\n                            </span>\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Email</label>\n                        <div className=\"control has-icons-left has-icons-right\">\n                            <input \n                                className=\"input\" \n                                name=\"email\"\n                                value={user.emaiil} onChange={handleChange}\n                                type=\"email\" \n                                placeholder=\"Email input\"/>\n                            <span className=\"icon is-small is-left\">\n                                <FontAwesomeIcon icon={faEnvelope} />\n                            </span>\n                            <span className=\"icon is-small is-right\">\n                                <i className=\"fas fa-exclamation-triangle\"></i>\n                            </span>\n                        </div>\n                        {/* <p className=\"help is-danger\">This email is invalid</p> */}\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Password</label>\n                        <div className=\"control has-icons-left has-icons-right\">\n                            <input \n                                className=\"input\" \n                                name=\"password\"\n                                value={user.password} onChange={handleChange}\n                                type=\"password\" \n                                placeholder=\"Please input a password\"/>\n                            <span className=\"icon is-small is-left\">\n                                <FontAwesomeIcon icon={faLock} />\n                            </span>\n                            <span className=\"icon is-small is-right\">\n                                <i className=\"fas fa-exclamation-triangle\"></i>\n                            </span>\n                        </div>\n                        {/* <p className=\"help is-danger\">This email is invalid</p> */}\n                    </div>\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <label className=\"checkbox\">\n                                <input type=\"checkbox\" /> I agree to the <a href=\"#\">terms and conditions</a>\n                            </label>\n                        </div>\n                    </div>\n\n                    <div className=\"field is-grouped\">\n                        <div className=\"control\">\n                            <button className=\"button is-link\" onClick={handleSubmit}>Submit</button>\n                        </div>\n                        <div className=\"control\">\n                            <button className=\"button is-ghost is-light\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <div className=\"column is-three-fifths is-offset-one-fifth\">\n                <p>Already have an account? <Link to=\"/login\">Log In</Link></p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Signup;","import React, { useState, useEffect } from 'react';\nimport { TwitterPicker } from 'react-color'\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { authHeader } from '../../helpers/AuthHeader';\n\n\nconst COLORS = ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF', '#bbb', '#eee', '#fff', '#000000']\n\nconst STEPS = [\n    'start',\n    'config',\n    'confirm',\n    'COMPLETED'\n];\n\nconst handleChange = (t, y) => {\n    //Do nothing\n}\n\nconst configItemFactory = (item) => {\n    let component;\n\n    if(item.type === 'color') {\n        component = (\n            <div style={{padding: 5}}>\n                <TwitterPicker triangle=\"hide\" colors={COLORS} color={item.color} onChangeComplete={item.onChange} onChange={handleChange} />\n            </div>\n        );\n    } else if (item.type === 'number') {\n        component = (\n            <div style={{padding: 5}}>\n                <input className={`input ${item.isError(item.val) && 'is-danger'}`} type=\"number\" placeholder={item.default} default={item.default} name={item.field} onChange={item.onChange}/>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"block step-wrapper\" key={`${item.field}_id`}>\n            {item.i && (\n                    <span className=\"step-i-bg\">{item.i}</span>\n                )}\n            <h3 className=\"is-size-4 step-wrapper\" style={{marginLeft: '28px'}}>\n                {item.title}</h3>\n            <p>{item.desc}</p>\n            {component}\n        </div>\n    )\n\n}\n\nfunction CreateBoardView() {\n\n    const [inputs, setInputs] = useState({\n        gameName: '',\n        gameDesc: '',\n        backgroundColor: {hex: '#fff'},\n        textColor: {hex: '#101010'},\n        displayCount: 10,\n    });\n    \n    const [step, setStep] = useState({\n        index: 0,\n        label: STEPS[0]\n    });\n    const [disableNext, setDisableNext] = useState(true);\n    const { gameName, gameDesc, backgroundColor, textColor, displayCount } = inputs;\n\n    const [game, setGame] = useState({})\n    const [userKey, setUserKey] = useState('11234442345');\n    const [err, setErr] = useState('');\n\n\n    useEffect(() => {\n        //Game has been set, show succssScreen\n        if (!game.game_id) {\n            return;\n        }\n        setStep({\n            index: -1,\n            label: 'success'\n        });\n    }, [game]);\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        if(name === 'gameName') {\n            setDisableNext(!value);\n        }\n        setInputs(inputs => ({ ...inputs, [name]: value }));\n    }\n\n    const goNext = () => {  \n        const i = step.index;\n        setStep({index: i + 1,  label: STEPS[i + 1]});\n    }\n\n    const submit = () => {\n        const createBoardUrl = '/api/games';\n        const body = {\n            name: gameName,\n            desc: gameDesc,\n            config: {\n                backgroundColor: textColor.hex,\n                textColor: textColor.hex,\n                displayCount,\n            }\n        }\n\n        axios.post(createBoardUrl, body, {headers: authHeader()})\n            .then( (response) => {\n                const game = response.data;\n                setGame(game);\n            })\n            .catch((err) => {\n                setErr(err)\n                setStep('err');\n            })\n    }\n\n    /*  \n        Config options:\n        - Background Color\n        - Text Color\n        - Diisplay counts\n    */\n    const renderConfig = ()  => {\n        const config_items = [\n            {\n                field: 'backgroundColor',\n                title: 'Background Color',\n                desc: 'This color will show as the background of your in-game leaderboard',\n                type: 'color',\n                i: 1,\n                color: backgroundColor.hex,\n                onChange: (v) => setInputs(inputs => ({ ...inputs, 'backgroundColor': v }))\n            },\n            {\n                field: 'textColor',\n                title: 'Text Color',\n                desc: 'The color of your text on the leaderboard',\n                type: 'color',\n                i: 2,\n                color: textColor.hex,\n                onChange: (v) => setInputs(inputs => ({ ...inputs, 'textColor': v }))\n            },\n            {\n                field: 'displayCount',\n                title: 'Display Count',\n                desc: 'The number of scores to display on the first page of your leaderboard. Must be beetween 5 and 50.',\n                type: 'number',\n                default: 10,\n                i: 3,\n                val: displayCount,\n                isError: (v) => v < 5 || v > 50,\n                onChange: handleChange\n            },\n        ]\n\n        \n        return (\n            <div>\n            <div className=\"columns\">\n                <div className=\"column is-half\" style={{borderRight: 'solid 1px #eee'}}>\n                    <h3 className=\"is-size-3 has-text-weight-bold\">{gameName} Leaderboard</h3>\n                    <p className=\"mb-4\">Customize your leaderboard by selecting the options below.</p>\n                    {config_items.map(i => configItemFactory(i))}\n                </div>\n                <div className=\"column is-half\">\n                    <section className=\"is-large\">\n                    <h3 className=\"is-size-4\">Preview</h3>\n                    <div style={{width: '200px', height: '300px', backgroundColor: backgroundColor.hex}}>\n                        <table className=\"table\" style={{width: '200px', height: '300px', backgroundColor: backgroundColor.hex, color: textColor.hex}}>\n                            <thead>\n                                <tr>\n                                    <th></th>\n                                    <th style={{color: textColor.hex}}>Name</th>\n                                    <th style={{color: textColor.hex}}>Score</th>\n                                    <th style={{color: textColor.hex}}>Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr><td>1</td> <td>Dan</td> <td>20,029</td><td>1/20/2021</td></tr>\n                                <tr><td>2</td> <td>Jan</td> <td>18,286</td><td>1/23/2021</td></tr>\n                                <tr><td>3</td> <td>Tim</td> <td>17,200</td><td>1/14/2021</td></tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <hr/>\n                    <div className=\"content\">\n                        <p className=\"is-size-4\">Your current selected configuration is:</p>\n                        <ul>\n                            <li>Background: {backgroundColor.hex}</li>\n                            <li>Text Color: {textColor.hex}</li>\n                            <li>Display Count: {displayCount}</li>\n                        </ul>\n                    </div>\n\n                    </section>\n                </div>\n            </div>\n                <hr/>\n                <div className=\"has-text-centered\">\n                    <p>Almost done, click Next to continue to the final step!</p>\n                    <button className=\"button is-success is-large is-rounded\" onClick={goNext}>Next</button>\n                </div>\n            </div>\n        )\n    }\n\n\n    const colorItem = (color) => {\n        return (\n            <div \n                className=\"is-vcentered\" \n                style={\n                    {\n                        width: '40px', height:'40px',\n                        backgroundColor: color, \n                        borderRadius:4, \n                        boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19)',\n                    }\n                }>\n            </div>\n        )\n    }\n\n    const renderConfirm = () => {\n        return (\n            <div className=\"container is-max-desktop\">\n                <h3 className=\"title is-size-4\">Create {gameName} Leaderboard</h3>\n                <div>\n                        <p className=\"is-size-5 mb-3\">Your current selected configuration is:</p>\n\n                        <table className=\"table is-striped is-hoverable\" style={{marginLeft: '24px'}}>\n                            <thead>\n                                <th></th>\n                                <th></th>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td className=\"is-vcentered\">Game Name:</td>\n                                    <td className=\"is-vcentered\">{gameName}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"is-vcentered\">Background:</td>\n                                    <td>\n                                        {colorItem(backgroundColor.hex)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"is-vcentered\">Text Color:</td>\n                                    <td>\n                                        {colorItem(textColor.hex)}\n                                    </td>\n                                </tr>\n                                <tr style={{borderBottom: '2px solid #ddd'}}>\n                                    <td className=\"is-vcentered\">Display Count:</td>\n                                    <td>\n                                        {displayCount}\n                                    </td>\n                                </tr>\n                            </tbody>\n\n                        </table>\n                    </div>\n                <div className=\"buttons  mt-4\">\n                    <button className=\"button is-success is-rounded\" onClick={submit}>Create this Leaderboard</button>\n                    <button className=\"button is-ghost\">Cancel</button>\n                </div>\n            </div>\n        );\n    }\n\n    const renderSuccess = () => {\n        return (\n            <div className=\"container is-max-desktop has-text-centered\">\n                <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\" size=\"4x\"></FontAwesomeIcon>\n                <h3 className=\"title c\">Your leaderboard for {game.name} is ready!</h3>\n                <hr/>\n                \n                <div className=\"content has-text-left\">\n                    <h3 className=\"is-size-4\">\n                        Adding to Unity\n                    </h3>\n\n                    <ol>\n                        <li>Get the SimplyLeaderboard package from the Asset Store</li>\n                        <li>Import to your project</li>\n                        <li>Attach the \"LeaderBoard\" script to an object in your scene.</li>\n                        <li>Update the <strong>GameId</strong> and <strong>AccessKeyId</strong> variables for your game</li>\n                    </ol>\n\n                    <div>\n                        <h4 className=\"is-size-5\">Game ID: {game.game_id}</h4>\n                        <h4 className=\"is-size-5\">Your profile Access Key ID: {userKey}</h4>\n                    </div>\n\n                </div>\n                <div className=\"buttons\">\n                    <button class=\"button is-link is-rounded\">View package in Unity Asset Store</button>\n                </div>\n                \n            </div>\n        );\n    }\n\n    const renderErr = () => {\n        return (\n            <div className=\"container is-max-desktop\">\n                Sorry, something has gone wrong.\n                {err}\n            </div>\n        )\n    }\n\n\n    function renderStart() {\n        return (\n            <div className=\"container is-max-desktop\">\n                <h3 className=\"title is-size-4\">Create a new Leaderboard</h3>\n                <div className=\"field\">\n                    <label className=\"label\">Game Name</label>\n                    <div className=\"control\">\n                        <input \n                            onChange={handleChange}\n                            className=\"input\" \n                            type=\"text\" \n                            placeholder=\"Enter the game name this Leaderboard will be for\"\n                            name=\"gameName\"\n                        />\n                    </div>\n                    <p className=\"help\">You can always change this later on if needed</p>\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Game Description (optional)</label>\n                    <div className=\"control\">\n                        <input \n                            onChange={handleChange}\n                            className=\"input\" \n                            type=\"text\" \n                            placeholder=\"\"\n                            name=\"gameDesc\"\n                        />\n                    </div>\n                    <p className=\"help\">What is your game about?</p>\n                </div>\n\n                <button className=\"button\" disabled={disableNext} onClick={goNext}>Next</button>\n            </div>\n        )\n    }\n\n    const stepVal = step.label;\n    let renderStep;\n    switch(stepVal) {\n        case 'start':\n            renderStep = renderStart();\n            break;\n        case 'config':\n            renderStep = renderConfig();\n            break;\n        case 'confirm':\n            renderStep = renderConfirm();\n            break;\n        case 'success':\n            renderStep = renderSuccess();\n            break;\n        default:\n            renderStep = renderErr();\n    }\n    return (\n        <div className=\"page\">\n            {renderStep}\n        </div>\n    )\n\n}\n\nexport default CreateBoardView;","import React, { useState, useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport { authHeader } from '../helpers/AuthHeader';\n\nfunction Dashboard() {\n\n    const [games, setGames] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [showItem, setShowItem] = useState('');\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('slb-user')));\n\n    const getGames = () => {\n        setLoading(true);\n        axios.get(`/api/games`, {headers: authHeader()})\n            .then(response => {\n                setGames(response.data.items);\n                setLoading(false);\n            })\n            .catch(err => console.error(err));\n    }\n    \n    useEffect(() => {\n        // code to run on component mount\n        getGames()\n    }, []);\n\n\n    const renderItemDetails = (item) => {\n        return (\n            <div className=\"block content\" style={{padding: 10}}>\n                <p className=\"is-size-5 m-0\">Game Id: <strong>{item.game_id}</strong></p> \n                <p className=\"is-size-5 mt-0 mb-3\">Access Key Id: <strong>{user.accessKey}</strong></p>\n                <p className=\"is-hint\">Use these values to configure your game object in Unity.</p>\n            </div>\n        )\n    }\n\n\n    const renderGameItem = (item) => {\n        return (\n            <div key={item.id} className=\"card  game-list-item\" style={{border: `2px solid ${item.config.backgroundColor}`}}>\n                <h3 className=\"card-header-title is-size-4\">\n                    {item.name}\n                </h3>\n                <p className=\"is-size-5\">\n                    {item.description}\n                </p>\n                <div className=\"card-content\">\n                    <p>\n                        <strong>Scores: </strong>{item.scores || 0}  \n                    </p>\n                    <p>\n                        <strong>Most Recent Score: </strong>{moment(item.lastScoreAt).format('MMMM Do YYYY')}\n                    </p>\n                    <p>\n                        <strong>Created: </strong>{moment(item.createdAt).format('MMMM Do YYYY')}\n                    </p>\n                </div>\n                <footer className=\"card-footer\">\n                    {\n                        showItem === item.id \n                        ? renderItemDetails(item) \n                        : <a className=\"card-footer-item\" onClick={() => setShowItem(item.id)}>Show Config Details</a>\n                    }\n                </footer>\n            </div>\n        )\n    }\n\n\n    const renderAddBoard = () => {\n        if(user && user.type === 'premium' || user.type === 'trial') {\n            return (\n                <div className=\"mt-5\">\n                    <Link to=\"/boards/create\">\n                        <button className=\"button is-success is-rounded\">New LeaderBoard</button>\n                    </Link>\n                    {user.type === 'trial' && (\n                        <p className=\"is-hint mt-3\">Your free trial includes unlimited game leaderboards. If you downgrade to a Free Account at the end of your trial you will be forced to delete any extra leaderboards above the free tier limit of <strong>1</strong>.</p>\n                    )}\n                </div>\n            );\n        } else if (user && user.type === 'basic') {\n            return (\n                <div className=\"mt-5\">\n                    <p className=\"ml-3\">You've reached your limit for LeaderBoards on your free plan</p>\n                    <Link to=\"/boards/create\">\n                        <button className=\"button is-ghost\">Upgrade to Premium</button>\n                    </Link>\n                </div>\n            )\n        }\n    }\n\n    const renderBoards = () => {\n        if (games && games.length > 0) {\n            return (\n                <div>\n                    {games.map(i => renderGameItem(i))}\n                    {renderAddBoard()}\n                </div>\n            )\n        } else if (!loading) {\n            return (\n                <div>\n                    <Link to=\"/boards/create\">\n                        <button className=\"button is-success is-rounded\">Create your first LeaderBoard</button>\n                    </Link>\n                </div>\n            )\n        }\n        else {\n            return (<div></div>);\n        }\n    }\n\n    return (\n        <div className=\"page\">\n            <h1 className=\"title\">Your LeaderBoards</h1>\n            <div style={{padding: '10px', marginTop: '5px'}}>\n                {renderBoards()}\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport { userActions } from '../redux/actions/user';\nimport { authHeader } from '../helpers/AuthHeader';\n\nfunction AccountPage() {\n\n    const dispatch = useDispatch();\n    const [account, setAccount] = useState(\n        JSON.parse(localStorage.getItem('slb-user'))\n    );\n    const [loading, setLoading] = useState(true);\n    const [coppied, setCoppied] = useState(false);\n\n    const getAccountInfo = () => {\n        axios.get(`/api/users/info`, {headers: authHeader()})\n            .then(response => {\n                setAccount(response.data);\n            })\n            .catch(err => console.error(err));\n    }\n    \n    useEffect(() => {\n        // code to run on component mount\n        // getAccountInfo()\n    }, []);\n\n\n    const copyToClipboard = (text) => {\n        const ta = document.createElement(\"textarea\");\n        ta.innerText = text;\n        document.body.appendChild(ta);\n        ta.select();\n        document.execCommand(\"copy\");\n        ta.remove();\n        setCoppied(true);\n        setTimeout(function(){ setCoppied(false) }, 1500);\n    };\n    \n\n\n    const renderTypeInfo = (type) => {\n        const trialRemaining = \"TODO\";\n        if (type === 'premium' || type === 'trial') {\n            return (\n                <div>\n                    <span className=\"tag is-success is-light is-large\" style={{margin: 10}}>\n                        Premium Account {type === 'trial' && ( <strong style={{marginLeft: 8}}>{' '} (Trial)</strong>)}\n                    </span>\n\n                    <div className=\"box\" style={{maxWidth: 450}}>\n                        <div className=\"content\">\n                            <h5> Premium Account Benefits</h5>\n                            <ul style={{listStyle: 'none'}}>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> Unlimited online leaderboards\n                                </li>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> Unlimited saves  per leaderboard\n                                </li>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> Full leaderboard customization options\n                                </li>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> Premium Support\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    {type === 'trial' && (\n                        <p className='ml-3'>You have {trialRemaining} days left in your premium trial.</p>\n                    )}\n\n                    <Link to=\"/account/manage\"><button className=\"button is-ghost\">Manage Account Subscription</button></Link>\n                </div>\n            )\n        } else if (type === 'basic') {\n            <div>\n                <span className=\"tag is-success is-light is-large\">Basic Account</span>\n\n                <div className=\"box\">\n                        <div className=\"content\">\n                            <ul>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> One online leaderboard\n                                    <p>Upgrade to premium for unlimited leaderboards</p>\n                                </li>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> Up to 50 saved scores\n                                    <p>Upgrade to premium for unlimited saved scores</p>\n                                </li>\n                                <li>\n                                    <FontAwesomeIcon icon={faCheckCircle} color=\"#36B37E\"></FontAwesomeIcon> Limited leaderboard customization options\n                                    <p>Upgrade to premium for full leaderboard customization options</p>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                <Link to=\"/account/upgrade\"><button className=\"button is-succeess\">Upgrade to Premium</button></Link>\n            </div>\n        }\n    }\n\n\n    const renderAccountInfo = () => {\n        return (\n            <div className=\"content\">\n                <h4>Email</h4>\n                <p>{account.email}</p>\n\n                <h4>AccessKey Id</h4>\n                <div className=\"control has-icons-right\" style={{width: 200, marginBottom: '2rem', cursor: 'pointer'}} onClick={() => copyToClipboard(account.accessKey)}>\n                    <input className=\"input\" type=\"text\" readOnly value={account.accessKey}/>\n                    <span className=\"icon is-small is-right\" style={{marginRight: 4}}>\n                        <p>Copy</p>\n                    </span>\n                    {coppied && (<p className=\"help is-success\">Coppied to ClipBoard</p>)}\n                </div>\n\n                <h4>Account Type</h4>\n                {renderTypeInfo(account.type)}\n\n                <h4 className=\"mt-5\">Account Created</h4>\n                <p>{moment(account.createdAt).format('MMMM Do YYYY')}</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"page\">\n            <h1 className=\"title\">Your Account</h1>\n            <div style={{padding: '10px', marginTop: '5px'}}>\n                {renderAccountInfo()}\n                <div>\n                    <button className=\"button is-ghost\" onClick={() => dispatch(userActions.logout())}>Log Out</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AccountPage;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport './App.sass';\r\nimport './App.css'\r\n\r\n// Route Helpers\r\nimport AppRoute from './components/AppRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n// Layouts\r\nimport LayoutDefault from './components/layout/LayoutDefault';\r\nimport LayoutUnAuth from './components/layout/LayoutUnAuth';\r\n\r\n// Pages / Views for Unauthenticated / new users\r\nimport Splash from './views/Splash';\r\nimport Login from './views/Login';\r\nimport Signup from './views/Signup';\r\n\r\n// Pages / Views for logged in users\r\nimport CreateBoardView from './views/boards/CreateBoard';\r\nimport Dashboard from './views/Dashboard';\r\nimport AccountPage from './views/Account';\r\n\r\nfunction App() {\r\n\r\n  const alert = useSelector(state => state.alert)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <div>\r\n        {/* Routes */}\r\n        <Switch>\r\n          <AppRoute exact path=\"/\" layout={LayoutUnAuth}>\r\n            <Splash />\r\n          </AppRoute>\r\n          <AppRoute path=\"/about\" layout={LayoutUnAuth}>\r\n            <div>About page</div>\r\n          </AppRoute>\r\n          <AppRoute exact path=\"/register\" layout={LayoutUnAuth}>\r\n            <Signup />\r\n          </AppRoute>\r\n          <AppRoute exact path=\"/login\" layout={LayoutUnAuth}>\r\n            <Login />\r\n          </AppRoute>\r\n\r\n          {/* Auth Required routes for a logged in user */}\r\n\r\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} layout={LayoutDefault} />\r\n          <PrivateRoute exact path=\"/boards/create\" component={CreateBoardView} layout={LayoutDefault} />\r\n          <PrivateRoute exact path=\"/account\" component={AccountPage} layout={LayoutDefault} />\r\n\r\n        </Switch>\r\n\r\n      </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { userConstants } from '../constants';\n\nlet user = JSON.parse(localStorage.getItem('slb-user'));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport { authentication } from './authentication.reducer';\n// import { registration } from './registration.reducer';\n// import { users } from './users.reducer'; /TODO\n\nconst rootReducer = combineReducers({\n    authentication,\n});\n\nexport default rootReducer;","// import { configureStore } from '@reduxjs/toolkit';\r\n// import counterReducer from '../features/counter/counterSlice';\r\n\r\n// export default configureStore({\r\n//   reducer: {\r\n//     counter: counterReducer,\r\n//   },\r\n// });\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../redux/reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}